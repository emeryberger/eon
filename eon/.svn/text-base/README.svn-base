eFlux v1.0 


Software Requirements:
	Ant (http://ant.apache.org)
	Dot (http://graphviz.org/)
	Java 1.5 (http://java.sun.com)	
	Python (http://www.python.org/)
	STL (http://www.sgi.com/tech/stl/)
	TinyOS v 1.1 (http://www.tinyos.net/tinyos-1.x/doc/)


Installation Instructions
	(0) Install TinyOS (see the TinyOS home page for instructions)
	(1) Extract the eflux code.
	(2) Use the eFlux-generated Makefile in order to compile a program.
	(3) Follow standard TinyOS installation instructions in order to program your mote.


Compilation

to build eflux:
	% export JAVA_HOME="<insert your java 1.5 directory here>"
	% ant


to build a server:
	-- manually:
	% mkdir <my server dir>
	% java -cp ./bin:./lib/jdsl.jar:./lib/javacuplex.jar:lib/getopt.jar \
		edu.umass.eflux.Main [-s] [-d <dot filename>] -r <my server dir> \ 
		<server-opts> src/apps/webserver/webserver-e
	*where -s means, "Generate Node Stubbs".  If you leave this off, you must
		write your own nodes.  Stubb generation will replace existing node
		files. <beware>
	-- using dommake.py
	% ./domake.py <app_name> <destination_folder> <generate stubs? Y/N> <copy imnplementation? Y/N>
	*where: 
		- <app_name> is the application name.
		- <destination_folder> is the destination folder (needs already exist).
		- <generate stubs?> indicates whether the existing node files should be replaced with stubs.
		- <copy implementation?> indicates whether the existing implementation files should be copied in.




eFlux README (c) 2006 UMass Amherst Computer Science Department
questions? -> fluxe@cs.umass.edu